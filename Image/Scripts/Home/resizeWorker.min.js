function Resize(n,t,i,r,u,f){this.widthOriginal=n;this.heightOriginal=t;this.targetWidth=i;this.targetHeight=r;this.colorChannels=u;this.interpolationPass=!!f;this.targetWidthMultipliedByChannels=this.targetWidth*this.colorChannels;this.originalWidthMultipliedByChannels=this.widthOriginal*this.colorChannels;this.originalHeightMultipliedByChannels=this.heightOriginal*this.colorChannels;this.widthPassResultSize=this.targetWidthMultipliedByChannels*this.heightOriginal;this.finalResultSize=this.targetWidthMultipliedByChannels*this.targetHeight;this.initialize()}var resizeWorker=null;self.onmessage=function(n){switch(n.data[0]){case"setup":resizeWorker=new Resize(n.data[1],n.data[2],n.data[3],n.data[4],n.data[5],n.data[6]);break;case"resize":resizeWorker.resize(n.data[1])}};Resize.prototype.initialize=function(){if(this.widthOriginal>0&&this.heightOriginal>0&&this.targetWidth>0&&this.targetHeight>0)this.configurePasses();else throw new Error("Invalid settings specified for the resizer.");};Resize.prototype.configurePasses=function(){this.widthOriginal==this.targetWidth?this.resizeWidth=this.bypassResizer:(this.ratioWeightWidthPass=this.widthOriginal/this.targetWidth,this.ratioWeightWidthPass<1&&this.interpolationPass?(this.initializeFirstPassBuffers(!0),this.resizeWidth=this.colorChannels==4?this.resizeWidthInterpolatedRGBA:this.resizeWidthInterpolatedRGB):(this.initializeFirstPassBuffers(!1),this.resizeWidth=this.colorChannels==4?this.resizeWidthRGBA:this.resizeWidthRGB));this.heightOriginal==this.targetHeight?this.resizeHeight=this.bypassResizer:(this.ratioWeightHeightPass=this.heightOriginal/this.targetHeight,this.ratioWeightHeightPass<1&&this.interpolationPass?(this.initializeSecondPassBuffers(!0),this.resizeHeight=this.resizeHeightInterpolated):(this.initializeSecondPassBuffers(!1),this.resizeHeight=this.colorChannels==4?this.resizeHeightRGBA:this.resizeHeightRGB))};Resize.prototype.resizeWidthRGB=function(n){var l=this.ratioWeightWidthPass,s=1/l,u=0,f=0,e=0,h=0,t=0,i=0,c=0,a=this.originalWidthMultipliedByChannels-2,v=this.targetWidthMultipliedByChannels-2,r=this.outputWidthWorkBench,o=this.widthBuffer;do{for(t=0;t<this.originalHeightMultipliedByChannels;)r[t++]=0,r[t++]=0,r[t++]=0;u=l;do if(f=1+e-h,u>=f){for(t=0,i=e;t<this.originalHeightMultipliedByChannels;i+=a)r[t++]+=n[i++]*f,r[t++]+=n[i++]*f,r[t++]+=n[i]*f;h=e=e+3;u-=f}else{for(t=0,i=e;t<this.originalHeightMultipliedByChannels;i+=a)r[t++]+=n[i++]*u,r[t++]+=n[i++]*u,r[t++]+=n[i]*u;h+=u;break}while(u>0&&e<this.originalWidthMultipliedByChannels);for(t=0,i=c;t<this.originalHeightMultipliedByChannels;i+=v)o[i++]=r[t++]*s,o[i++]=r[t++]*s,o[i]=r[t++]*s;c+=3}while(c<this.targetWidthMultipliedByChannels);return o};Resize.prototype.resizeWidthInterpolatedRGB=function(n){for(var s,h=this.ratioWeightWidthPass,u=0,t=0,i=0,o=0,e=0,r=this.widthBuffer,f=0;u<1/3;f+=3,u+=h)for(t=f,i=0;t<this.widthPassResultSize;i+=this.originalWidthMultipliedByChannels,t+=this.targetWidthMultipliedByChannels)r[t]=n[i],r[t+1]=n[i+1],r[t+2]=n[i+2];for(u-=1/3,s=this.widthOriginal-1;u<s;f+=3,u+=h)for(e=u%1,o=1-e,t=f,i=Math.floor(u)*3;t<this.widthPassResultSize;i+=this.originalWidthMultipliedByChannels,t+=this.targetWidthMultipliedByChannels)r[t]=n[i]*o+n[i+3]*e,r[t+1]=n[i+1]*o+n[i+4]*e,r[t+2]=n[i+2]*o+n[i+5]*e;for(s=this.originalWidthMultipliedByChannels-3;f<this.targetWidthMultipliedByChannels;f+=3)for(t=f,i=s;t<this.widthPassResultSize;i+=this.originalWidthMultipliedByChannels,t+=this.targetWidthMultipliedByChannels)r[t]=n[i],r[t+1]=n[i+1],r[t+2]=n[i+2];return r};Resize.prototype.resizeWidthRGBA=function(n){var l=this.ratioWeightWidthPass,s=1/l,u=0,f=0,e=0,h=0,t=0,i=0,c=0,a=this.originalWidthMultipliedByChannels-3,v=this.targetWidthMultipliedByChannels-3,r=this.outputWidthWorkBench,o=this.widthBuffer;do{for(t=0;t<this.originalHeightMultipliedByChannels;)r[t++]=0,r[t++]=0,r[t++]=0,r[t++]=0;u=l;do if(f=1+e-h,u>=f){for(t=0,i=e;t<this.originalHeightMultipliedByChannels;i+=a)r[t++]+=n[i++]*f,r[t++]+=n[i++]*f,r[t++]+=n[i++]*f,r[t++]+=n[i]*f;h=e=e+4;u-=f}else{for(t=0,i=e;t<this.originalHeightMultipliedByChannels;i+=a)r[t++]+=n[i++]*u,r[t++]+=n[i++]*u,r[t++]+=n[i++]*u,r[t++]+=n[i]*u;h+=u;break}while(u>0&&e<this.originalWidthMultipliedByChannels);for(t=0,i=c;t<this.originalHeightMultipliedByChannels;i+=v)o[i++]=r[t++]*s,o[i++]=r[t++]*s,o[i++]=r[t++]*s,o[i]=r[t++]*s;c+=4}while(c<this.targetWidthMultipliedByChannels);return o};Resize.prototype.resizeWidthInterpolatedRGBA=function(n){for(var s,h=this.ratioWeightWidthPass,u=0,i=0,t=0,o=0,e=0,r=this.widthBuffer,f=0;u<1/3;f+=4,u+=h)for(i=f,t=0;i<this.widthPassResultSize;t+=this.originalWidthMultipliedByChannels,i+=this.targetWidthMultipliedByChannels)r[i]=n[t],r[i+1]=n[t+1],r[i+2]=n[t+2],r[i+3]=n[t+3];for(u-=1/3,s=this.widthOriginal-1;u<s;f+=4,u+=h)for(e=u%1,o=1-e,i=f,t=Math.floor(u)*4;i<this.widthPassResultSize;t+=this.originalWidthMultipliedByChannels,i+=this.targetWidthMultipliedByChannels)r[i]=n[t]*o+n[t+4]*e,r[i+1]=n[t+1]*o+n[t+5]*e,r[i+2]=n[t+2]*o+n[t+6]*e,r[i+3]=n[t+3]*o+n[t+7]*e;for(s=this.originalWidthMultipliedByChannels-4;f<this.targetWidthMultipliedByChannels;f+=4)for(i=f,t=s;i<this.widthPassResultSize;t+=this.originalWidthMultipliedByChannels,i+=this.targetWidthMultipliedByChannels)r[i]=n[t],r[i+1]=n[t+1],r[i+2]=n[t+2],r[i+3]=n[t+3];return r};Resize.prototype.resizeHeightRGB=function(n){var c=this.ratioWeightHeightPass,s=1/c,u=0,r=0,f=0,h=0,t=0,e=0,i=this.outputHeightWorkBench,o=this.heightBuffer;do{for(t=0;t<this.targetWidthMultipliedByChannels;)i[t++]=0,i[t++]=0,i[t++]=0;u=c;do if(r=1+f-h,u>=r){for(t=0;t<this.targetWidthMultipliedByChannels;)i[t++]+=n[f++]*r,i[t++]+=n[f++]*r,i[t++]+=n[f++]*r;h=f;u-=r}else{for(t=0,r=f;t<this.targetWidthMultipliedByChannels;)i[t++]+=n[r++]*u,i[t++]+=n[r++]*u,i[t++]+=n[r++]*u;h+=u;break}while(u>0&&f<this.widthPassResultSize);for(t=0;t<this.targetWidthMultipliedByChannels;)o[e++]=Math.round(i[t++]*s),o[e++]=Math.round(i[t++]*s),o[e++]=Math.round(i[t++]*s)}while(e<this.finalResultSize);return o};Resize.prototype.resizeHeightInterpolated=function(n){for(var s=this.ratioWeightHeightPass,i=0,u=0,t=0,r=0,h=0,c=0,e=0,f=this.heightBuffer,o;i<1/3;i+=s)for(t=0;t<this.targetWidthMultipliedByChannels;)f[u++]=Math.round(n[t++]);for(i-=1/3,o=this.heightOriginal-1;i<o;i+=s)for(e=i%1,c=1-e,r=Math.floor(i)*this.targetWidthMultipliedByChannels,h=r+this.targetWidthMultipliedByChannels,t=0;t<this.targetWidthMultipliedByChannels;++t)f[u++]=Math.round(n[r++]*c+n[h++]*e);while(u<this.finalResultSize)for(t=0,r=o*this.targetWidthMultipliedByChannels;t<this.targetWidthMultipliedByChannels;++t)f[u++]=Math.round(n[r++]);return f};Resize.prototype.resizeHeightRGBA=function(n){var c=this.ratioWeightHeightPass,s=1/c,u=0,r=0,f=0,h=0,t=0,e=0,i=this.outputHeightWorkBench,o=this.heightBuffer;do{for(t=0;t<this.targetWidthMultipliedByChannels;)i[t++]=0,i[t++]=0,i[t++]=0,i[t++]=0;u=c;do if(r=1+f-h,u>=r){for(t=0;t<this.targetWidthMultipliedByChannels;)i[t++]+=n[f++]*r,i[t++]+=n[f++]*r,i[t++]+=n[f++]*r,i[t++]+=n[f++]*r;h=f;u-=r}else{for(t=0,r=f;t<this.targetWidthMultipliedByChannels;)i[t++]+=n[r++]*u,i[t++]+=n[r++]*u,i[t++]+=n[r++]*u,i[t++]+=n[r++]*u;h+=u;break}while(u>0&&f<this.widthPassResultSize);for(t=0;t<this.targetWidthMultipliedByChannels;)o[e++]=Math.round(i[t++]*s),o[e++]=Math.round(i[t++]*s),o[e++]=Math.round(i[t++]*s),o[e++]=Math.round(i[t++]*s)}while(e<this.finalResultSize);return o};Resize.prototype.resize=function(n){self.postMessage(this.resizeHeight(this.resizeWidth(n)))};Resize.prototype.bypassResizer=function(n){return n};Resize.prototype.initializeFirstPassBuffers=function(n){this.widthBuffer=this.generateFloatBuffer(this.widthPassResultSize);n||(this.outputWidthWorkBench=this.generateFloatBuffer(this.originalHeightMultipliedByChannels))};Resize.prototype.initializeSecondPassBuffers=function(n){this.heightBuffer=this.generateUint8Buffer(this.finalResultSize);n||(this.outputHeightWorkBench=this.generateFloatBuffer(this.targetWidthMultipliedByChannels))};Resize.prototype.generateFloatBuffer=function(n){try{return new Float32Array(n)}catch(t){return[]}};Resize.prototype.generateUint8Buffer=function(n){try{return new Uint8Array(n)}catch(t){return[]}};
/*
//# sourceMappingURL=resizeWorker.min.js.map
*/